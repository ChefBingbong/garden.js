"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const a=require("@catalogfi/utils"),O=require("./index7.cjs"),n=require("./index8.cjs"),y=require("./index6.cjs"),N=require("./index3.cjs"),h=require("./index9.cjs"),I=require("./index10.cjs"),l=require("./index11.cjs"),p=require("./index12.cjs");class c{constructor(t){var s;this.url=y.parseURL(t.url??p.API),this.orderSocket=new O.OrdersSocket(this.url.replace("https","wss")),this.url+=this.url.endsWith("/")?"":"/",this.auth=new n.Siwe(this.url,t.signer,{...t.opts,store:((s=t.opts)==null?void 0:s.store)||new l.MemoryStorage})}static async init(t){var r;const e=await new n.Siwe(t.url??p.API,t.signer,t.opts).getToken();return t.opts={...t.opts,store:((r=t==null?void 0:t.opts)==null?void 0:r.store)??new l.MemoryStorage},t.opts.store.setItem(I.StoreKeys.AUTH_TOKEN,e),new c(t)}async createOrder(t){const{sendAmount:s,secretHash:e,receiveAmount:r,fromAsset:u,toAsset:w,...i}=t;this.validateConfig(t);const A=N.orderPairGenerator(u,w),m=this.url+"orders",{orderId:S}=await a.Fetcher.post(m,{body:JSON.stringify({...i,sendAmount:s,receiveAmount:r,secretHash:a.trim0x(e),orderPair:A,userWalletBTCAddress:i.btcInputAddress}),headers:{Authorization:await this.auth.getToken()}});return S}async getOrders(t,s){const e=await a.Fetcher.get(this.url+"orders?"+new URLSearchParams({...s!=null&&s.taker?{taker:t}:{maker:t},verbose:s!=null&&s.verbose?"true":"false",...s!=null&&s.pending?{status:"2"}:{}}));return s!=null&&s.verbose,e}subscribeOrders(t,s){this.orderSocket.subscribe(t,s)}unsubscribeOrders(){this.orderSocket.unsubscribe()}validateConfig(t){const{sendAmount:s,receiveAmount:e}=t,r=+s,u=+e;if(isNaN(r)||r<=0||s.includes("."))throw new Error(h.OrderbookErrors.INVALID_SEND_AMOUNT);if(isNaN(u)||u<=0||e.includes("."))throw new Error(h.OrderbookErrors.INVALID_RECEIVE_AMOUNT)}}exports.Orderbook=c;
